{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anany\\\\matrimonysite\\\\src\\\\loginpage\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./login.css\";\n\n//  import axios from 'axios';\n// import Avatar from '@mui/material/Avatar';\n// import Button from '@mui/material/Button';\n// import CssBaseline from '@mui/material/CssBaseline';\n// import TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Link from '@mui/material/Link';\n// import Paper from '@mui/material/Paper';\n// import Box from '@mui/material/Box';\n// import Grid from '@mui/material/Grid';\n// import { useState } from 'react';\n// // import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n// import Typography from '@mui/material/Typography';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n// import Navbar from '../homepage/nav';\n// import { Navigate, Link as Path } from 'react-router-dom';\n// import { useDispatch } from 'react-redux';\n// import { setName } from '../redux/user';\n// import { useNavigate } from 'react-router-dom';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n\n// function Copyright(props) {\n//   return (\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n//       {'Engage and Learn'}\n\n//     </Typography>\n//   );\n// }\n\n// const theme = createTheme();\n// export default function SignInSide() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [emailError, setEmailError] = useState('');\n\n//   const validateEmail = (email) => {\n\n//     const pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n//     return pattern.test(email);\n//   }\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async(e) => {\n//     e.preventDefault();\n\n//     if (!validateEmail(email)) {\n//       setEmailError('Please enter a valid email address.');\n//       return;\n//     }\n//     try {\n//       const response = await axios.post(\"http://localhost:8181/api/v1/auth/authenticate\", { email, password });\n//       const token = response.data.token;\n//       const user = response.data.userResponse;\n\n//       localStorage.setItem('jwtToken', token);\n//       localStorage.setItem('user', JSON.stringify(user));\n\n//       navigate('/landing');\n//     } catch (error) {\n//       console.error(\"Error:  \", error);\n//       alert(\"Password is Incorrect\");\n//     }\n//     setEmailError('');\n//   }\n\n//   return (\n\n//   )\n// }\n//     <ThemeProvider theme={theme}>\n//         <Navbar />\n//       <Grid container component=\"main\" sx={{ height: '100vh' }}>\n//         <CssBaseline />\n//         <Grid\n//           item\n//           xs={false}\n//           sm={4}\n//           md={7}\n//           sx={{\n//             backgroundImage: 'url(https://i0.wp.com/digital-photography-school.com/wp-content/uploads/2021/03/wedding-photography-tips-13.jpg?w=1500&ssl=1)',\n//             backgroundRepeat: 'no-repeat',\n//             backgroundColor: (t) =>\n//               t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n//             backgroundSize: 'cover',\n//             backgroundPosition: 'center',\n//           }}\n//         />\n//         <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n//           <Box\n//             sx={{\n//               my: 8,\n//               mx: 4,\n//               display: 'flex',\n//               flexDirection: 'column',\n//               alignItems: 'center',\n//             }}\n//           >\n//             <Avatar sx={{ m: 1, bgcolor: 'blue',width:80,height:80 }}>\n//               {/* <LockOutlinedIcon /> */}\n//             </Avatar>\n//             <Typography component=\"h1\" variant=\"h5\">\n//               LogIn\n//             </Typography>\n//             <Formik\n//   initialValues={{\n//     name: '',\n//     email: '',\n//     password: ''\n//   }}\n//   validationSchema={Yup.object({\n//     name: Yup.string().required('Name is required'),\n//     email: Yup.string().email('Invalid email address').required('Email is required'),\n//     password: Yup.string().required('Password is required')\n//   })}\n//   onSubmit={(values, { setSubmitting }) => {\n//     // Check if all required fields are filled\n//     if (values.name && values.email && values.password) {\n//       // Perform sign-in action\n//       console.log('Signing in...', values);\n//     } else {\n//       console.log('Please fill in all required fields.');\n//     }\n\n//     setSubmitting(false);\n//   }}\n// >\n//   <Form noValidate onSubmit={handleSubmit}>\n//     <Field\n//       as={TextField}\n//       margin=\"normal\"\n//       required\n//       fullWidth\n//       id=\"name\"\n\n//       label=\"Name\"\n//       name=\"name\"\n//       autoComplete=\"name\"\n//       autoFocus\n//     />\n//     <ErrorMessage name=\"name\" component=\"div\" />\n\n//     <Field\n//       as={TextField}\n//       margin=\"normal\"\n//       required\n//       fullWidth\n//       id=\"email\"\n//       label=\"Email Address\"\n//       name=\"email\"\n//       autoComplete=\"email\"\n//       value={email}\n//       onChange={(e)=>setEmail(e.target.value)}\n//     />\n//     <ErrorMessage name=\"email\" component=\"div\" />\n\n//     <Field\n//       as={TextField}\n//       margin=\"normal\"\n//       required\n//       fullWidth\n//       name=\"password\"\n//       label=\"Password\"\n//       type=\"password\"\n//       id=\"password\"\n//       autoComplete=\"current-password\"\n//       value={password}\n//       onChange={(e)=>setPassword(e.target.value)}\n//     />\n//     <ErrorMessage name=\"password\" component=\"div\" />\n\n//             <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n//               {/* <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"name\"\n//                 value={name}\n//                 onChange={handlechange}\n//                 label=\"Name\"\n//                 name=\"name\"\n//                 autoComplete=\"name\"\n//                 autoFocus\n//               />\n\n//                <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 id=\"email\"\n// label=\"Email Address\"\n//                 name=\"email\"\n//                 autoComplete=\"email\"\n//                 autoFocus\n//               />\n//               <TextField\n//                 margin=\"normal\"\n//                 required\n//                 fullWidth\n//                 name=\"password\"\n//                 label=\"Password\"\n//                 type=\"password\"\n//                 id=\"password\"\n//                 autoComplete=\"current-password\"\n//               /> */}\n//               <FormControlLabel\n//                 control={<Checkbox value=\"remember\" color=\"primary\" />}\n//                 label=\"Remember me\"\n//               />\n//               {/* <Button style={{backgroundColor:\"green\",fontSize:15,color:'white',textDecoration:null}}\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\" component={Path} to=\"/landing\"\n//                 sx={{ mt: 3, mb: 2 ,color:'whitesmoke',textDecoration:null}}\n//               >\n//                 Sign In\n//               </Button> */}\n//               <Button\n//       type=\"submit\"\n//       fullWidth\n//       variant=\"contained\"\n\n//     >\n//      Sign In\n//     </Button>\n//               <Grid container>\n//                 <Grid item xs>\n//                   <Link href=\"#\" variant=\"body2\">\n//                     Forgot password?\n//                   </Link>\n//                 </Grid>\n//                 <Grid item>\n//                   <Link variant=\"body2\"><Path to=\"/register\">\n//                     {\"Don't have an account? Sign Up\"}\n//                     </Path>\n//                   </Link>\n//                 </Grid>\n//               </Grid>\n//               <Copyright sx={{ mt: 5 }} />\n//             </Box>\n//         </Form>\n// </Formik>\n//           </Box>\n//         </Grid>\n//       </Grid>\n//     </ThemeProvider>\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{/* <div>\r\n  <form onSubmit={handleSubmit}>\r\n \n  <input type='text' value={email} onChange={(e)=>setEmail(e.target.value)}></input>\r\n  <input type='text' value={password} onChange={(e)=>setPassword(e.target.value)}></input>\r\n  <button>Submi4</button>\r\n  </form>\r\n </div>\r\n  );\r\n } */}\n\n//  const handleSubmit = async(e) => {\n//   try{\n//     axios.post(\"http://localhost:8080/api/v1/auth/authenticate\",{\n//         \"email\":username,\n//         \"password\":password\n//     })\n//     .then(res=>{\n//         console.log(res.data);\n//         localStorage.setItem(\"token\",res.data.token);\n//         updateValue(username);\n//         navigate(\"/home\");\n//     })\n//     .catch(function (error) {\n//         // if (error.response) {\n//         //   console.log(error.response.data);\n//         //   console.log(error.response.status);\n//         //   console.log(error.response.headers);\n//         // }\n//         // console.log(error.response.status);\n//         if(error && error.response && error.response.status!=403)\n//             navigate(\"/home\");\n//         else\n//             setAuthError(\"Account doesn't exist\");\n//       })\n// }\n// catch(error){\n//     console.log(\"Error\"+error.response.status);\n// }\n//  }\n\n// if (this.validateForm()) {\n//   const data = {\n//     user : this.state.fields.username,\n//     email : this.state.fields.email,\n//     mobile : this.state.fields.mobile,\n//     gender : this.state.fields.gender,\n//     password : this.state.fields.password        \n//   }\n//     axios.post('http://127.0.0.1:8080/addnew',data);\n//     let fields = {};\n//     fields[\"mobile\"] = \"\";\n//     fields[\"password\"] = \"\";\n//     this.setState({fields:fields});\n//     alert(\"Your Form has been submitted successfully.\");\n// }\n// }\n// validateForm() {\n\n// let fields = this.state.fields;\n// let errors = {};\n// let formIsValid = true;\n\n// if (fields[\"mobile\"]) {\n// if (!fields[\"mobile\"].match(/^[0-9]{10}$/)) {\n//   formIsValid = false;\n//   errors[\"mobile\"] = \"*Please enter a valid mobile no.\";\n// }\n// }\n\n// if (fields[\"password\"]) {\n// if (!fields[\"password\"].match(/^(?=.\\d)(?=.[a-z])(?=.[A-Z])(?=.[!@#$%^&*_=+-]).{8,}$/)) {\n//   formIsValid = false;\n//   errors[\"password\"] = \"*Please enter secure and strong password.\";\n// }\n// }\n\n// this.setState({\n// errors: errors\n// });\n// return formIsValid;\n\n// }\n\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorText, setErrorText] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"your_login_endpoint\", {\n        username,\n        password\n      });\n    } catch (error) {\n      setErrorText(\"Invalid username or password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"loginhead\",\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        className: \"logininput\",\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        className: \"logininput\",\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"loginbut\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), errorText && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"HAE5H1/Jx43RHMVETb/HY/AVDzU=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","errorText","setErrorText","handleSubmit","e","preventDefault","response","post","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Anany/matrimonysite/src/loginpage/login.js"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./login.css\";\r\n\r\n//  import axios from 'axios';\r\n// import Avatar from '@mui/material/Avatar';\r\n// import Button from '@mui/material/Button';\r\n// import CssBaseline from '@mui/material/CssBaseline';\r\n// import TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\n// import Paper from '@mui/material/Paper';\r\n// import Box from '@mui/material/Box';\r\n// import Grid from '@mui/material/Grid';\r\n// import { useState } from 'react';\r\n// // import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\n// import Typography from '@mui/material/Typography';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n// import Navbar from '../homepage/nav';\r\n// import { Navigate, Link as Path } from 'react-router-dom';\r\n// import { useDispatch } from 'react-redux';\r\n// import { setName } from '../redux/user';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n\r\n// function Copyright(props) {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n//       {'Engage and Learn'}\r\n       \r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\n// const theme = createTheme();\r\n// export default function SignInSide() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [emailError, setEmailError] = useState('');\r\n\r\n//   const validateEmail = (email) => {\r\n\r\n//     const pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n \r\n//     return pattern.test(email);\r\n//   }\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async(e) => {\r\n//     e.preventDefault();\r\n    \r\n//     if (!validateEmail(email)) {\r\n//       setEmailError('Please enter a valid email address.');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:8181/api/v1/auth/authenticate\", { email, password });\r\n//       const token = response.data.token;\r\n//       const user = response.data.userResponse;\r\n\r\n//       localStorage.setItem('jwtToken', token);\r\n//       localStorage.setItem('user', JSON.stringify(user));\r\n\r\n\r\n//       navigate('/landing');\r\n//     } catch (error) {\r\n//       console.error(\"Error:  \", error);\r\n//       alert(\"Password is Incorrect\");\r\n//     }\r\n//     setEmailError('');\r\n//   }\r\n\r\n//   return (\r\n    \r\n//   )\r\n// }\r\n//     <ThemeProvider theme={theme}>\r\n//         <Navbar />\r\n//       <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n//         <CssBaseline />\r\n//         <Grid\r\n//           item\r\n//           xs={false}\r\n//           sm={4}\r\n//           md={7}\r\n//           sx={{\r\n//             backgroundImage: 'url(https://i0.wp.com/digital-photography-school.com/wp-content/uploads/2021/03/wedding-photography-tips-13.jpg?w=1500&ssl=1)',\r\n//             backgroundRepeat: 'no-repeat',\r\n//             backgroundColor: (t) =>\r\n//               t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n//             backgroundSize: 'cover',\r\n//             backgroundPosition: 'center',\r\n//           }}\r\n//         />\r\n//         <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n//           <Box\r\n//             sx={{\r\n//               my: 8,\r\n//               mx: 4,\r\n//               display: 'flex',\r\n//               flexDirection: 'column',\r\n//               alignItems: 'center',\r\n//             }}\r\n//           >\r\n//             <Avatar sx={{ m: 1, bgcolor: 'blue',width:80,height:80 }}>\r\n//               {/* <LockOutlinedIcon /> */}\r\n//             </Avatar>\r\n//             <Typography component=\"h1\" variant=\"h5\">\r\n//               LogIn\r\n//             </Typography>\r\n//             <Formik\r\n//   initialValues={{\r\n//     name: '',\r\n//     email: '',\r\n//     password: ''\r\n//   }}\r\n//   validationSchema={Yup.object({\r\n//     name: Yup.string().required('Name is required'),\r\n//     email: Yup.string().email('Invalid email address').required('Email is required'),\r\n//     password: Yup.string().required('Password is required')\r\n//   })}\r\n//   onSubmit={(values, { setSubmitting }) => {\r\n//     // Check if all required fields are filled\r\n//     if (values.name && values.email && values.password) {\r\n//       // Perform sign-in action\r\n//       console.log('Signing in...', values);\r\n//     } else {\r\n//       console.log('Please fill in all required fields.');\r\n//     }\r\n    \r\n//     setSubmitting(false);\r\n//   }}\r\n// >\r\n//   <Form noValidate onSubmit={handleSubmit}>\r\n//     <Field\r\n//       as={TextField}\r\n//       margin=\"normal\"\r\n//       required\r\n//       fullWidth\r\n//       id=\"name\"\r\n      \r\n//       label=\"Name\"\r\n//       name=\"name\"\r\n//       autoComplete=\"name\"\r\n//       autoFocus\r\n//     />\r\n//     <ErrorMessage name=\"name\" component=\"div\" />\r\n\r\n//     <Field\r\n//       as={TextField}\r\n//       margin=\"normal\"\r\n//       required\r\n//       fullWidth\r\n//       id=\"email\"\r\n//       label=\"Email Address\"\r\n//       name=\"email\"\r\n//       autoComplete=\"email\"\r\n//       value={email}\r\n//       onChange={(e)=>setEmail(e.target.value)}\r\n//     />\r\n//     <ErrorMessage name=\"email\" component=\"div\" />\r\n\r\n//     <Field\r\n//       as={TextField}\r\n//       margin=\"normal\"\r\n//       required\r\n//       fullWidth\r\n//       name=\"password\"\r\n//       label=\"Password\"\r\n//       type=\"password\"\r\n//       id=\"password\"\r\n//       autoComplete=\"current-password\"\r\n//       value={password}\r\n//       onChange={(e)=>setPassword(e.target.value)}\r\n//     />\r\n//     <ErrorMessage name=\"password\" component=\"div\" />\r\n  \r\n\r\n//             <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n//               {/* <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"name\"\r\n//                 value={name}\r\n//                 onChange={handlechange}\r\n//                 label=\"Name\"\r\n//                 name=\"name\"\r\n//                 autoComplete=\"name\"\r\n//                 autoFocus\r\n//               />\r\n            \r\n//                <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 id=\"email\"\r\n// label=\"Email Address\"\r\n//                 name=\"email\"\r\n//                 autoComplete=\"email\"\r\n//                 autoFocus\r\n//               />\r\n//               <TextField\r\n//                 margin=\"normal\"\r\n//                 required\r\n//                 fullWidth\r\n//                 name=\"password\"\r\n//                 label=\"Password\"\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 autoComplete=\"current-password\"\r\n//               /> */}\r\n//               <FormControlLabel\r\n//                 control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n//                 label=\"Remember me\"\r\n//               />\r\n//               {/* <Button style={{backgroundColor:\"green\",fontSize:15,color:'white',textDecoration:null}}\r\n//                 type=\"submit\"\r\n//                 fullWidth\r\n//                 variant=\"contained\" component={Path} to=\"/landing\"\r\n//                 sx={{ mt: 3, mb: 2 ,color:'whitesmoke',textDecoration:null}}\r\n//               >\r\n//                 Sign In\r\n//               </Button> */}\r\n//               <Button\r\n//       type=\"submit\"\r\n//       fullWidth\r\n//       variant=\"contained\"\r\n\r\n     \r\n \r\n//     >\r\n//      Sign In\r\n//     </Button>\r\n//               <Grid container>\r\n//                 <Grid item xs>\r\n//                   <Link href=\"#\" variant=\"body2\">\r\n//                     Forgot password?\r\n//                   </Link>\r\n//                 </Grid>\r\n//                 <Grid item>\r\n//                   <Link variant=\"body2\"><Path to=\"/register\">\r\n//                     {\"Don't have an account? Sign Up\"}\r\n//                     </Path>\r\n//                   </Link>\r\n//                 </Grid>\r\n//               </Grid>\r\n//               <Copyright sx={{ mt: 5 }} />\r\n//             </Box>\r\n//         </Form>\r\n// </Formik>\r\n//           </Box>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </ThemeProvider>\r\n{/* <div>\r\n  <form onSubmit={handleSubmit}>\r\n\r\n  <input type='text' value={email} onChange={(e)=>setEmail(e.target.value)}></input>\r\n  <input type='text' value={password} onChange={(e)=>setPassword(e.target.value)}></input>\r\n  <button>Submi4</button>\r\n  </form>\r\n</div>\r\n  );\r\n} */}\r\n\r\n\r\n\r\n\r\n//  const handleSubmit = async(e) => {\r\n//   try{\r\n//     axios.post(\"http://localhost:8080/api/v1/auth/authenticate\",{\r\n//         \"email\":username,\r\n//         \"password\":password\r\n//     })\r\n//     .then(res=>{\r\n//         console.log(res.data);\r\n//         localStorage.setItem(\"token\",res.data.token);\r\n//         updateValue(username);\r\n//         navigate(\"/home\");\r\n//     })\r\n//     .catch(function (error) {\r\n//         // if (error.response) {\r\n//         //   console.log(error.response.data);\r\n//         //   console.log(error.response.status);\r\n//         //   console.log(error.response.headers);\r\n//         // }\r\n//         // console.log(error.response.status);\r\n//         if(error && error.response && error.response.status!=403)\r\n//             navigate(\"/home\");\r\n//         else\r\n//             setAuthError(\"Account doesn't exist\");\r\n//       })\r\n// }\r\n// catch(error){\r\n//     console.log(\"Error\"+error.response.status);\r\n// }\r\n//  }\r\n\r\n\r\n\r\n// if (this.validateForm()) {\r\n//   const data = {\r\n//     user : this.state.fields.username,\r\n//     email : this.state.fields.email,\r\n//     mobile : this.state.fields.mobile,\r\n//     gender : this.state.fields.gender,\r\n//     password : this.state.fields.password        \r\n//   }\r\n//     axios.post('http://127.0.0.1:8080/addnew',data);\r\n//     let fields = {};\r\n//     fields[\"mobile\"] = \"\";\r\n//     fields[\"password\"] = \"\";\r\n//     this.setState({fields:fields});\r\n//     alert(\"Your Form has been submitted successfully.\");\r\n// }\r\n// }\r\n// validateForm() {\r\n\r\n// let fields = this.state.fields;\r\n// let errors = {};\r\n// let formIsValid = true;\r\n\r\n// if (fields[\"mobile\"]) {\r\n// if (!fields[\"mobile\"].match(/^[0-9]{10}$/)) {\r\n//   formIsValid = false;\r\n//   errors[\"mobile\"] = \"*Please enter a valid mobile no.\";\r\n// }\r\n// }\r\n\r\n// if (fields[\"password\"]) {\r\n// if (!fields[\"password\"].match(/^(?=.\\d)(?=.[a-z])(?=.[A-Z])(?=.[!@#$%^&*_=+-]).{8,}$/)) {\r\n//   formIsValid = false;\r\n//   errors[\"password\"] = \"*Please enter secure and strong password.\";\r\n// }\r\n// }\r\n\r\n// this.setState({\r\n// errors: errors\r\n// });\r\n// return formIsValid;\r\n\r\n// }\r\n\r\n\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorText, setErrorText] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\"your_login_endpoint\", {\r\n        username,\r\n        password,\r\n      });\r\n    } catch (error) {\r\n      setErrorText(\"Invalid username or password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2 className=\"loginhead\">Login Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          className=\"logininput\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Username\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          className=\"logininput\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button type=\"submit\" className=\"loginbut\">Login</button>\r\n        {errorText && <p className=\"error-text\">{errorText}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}